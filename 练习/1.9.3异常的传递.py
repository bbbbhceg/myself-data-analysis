# 在教学课程内，他提到因为异常的传递性，所以异常可以在更高的层级被捕获
# 但是我所猜想的是，如果中间被捕获会怎么样？
def func3() :
    print('开始执行功能3')

    print(10/0)   # 异常处

    print('结束执行功能3')
def func2() :
    print('开始执行功能2')
    try:
        func3()
    except:
        print('在功能2处捕获异常')
    print('结束执行功能2')
def func1() :
    print('开始执行功能1')
    try:
        func2()
    except:
        print('在功能1处捕获异常')
    print('结束执行功能1')
def main():
    try:
        func1()
    except:
        print('在main处捕获异常')

main()

# 反思，这个异常的捕获优先级是，越靠近异常源，优先级越高。
# 证据是，我在自定义函数---功能321和main处，都添加了异常捕获
# 根据输出显示，异常在功能三处被捕获
# 当我仅删除功能三的异常捕获时，异常在功能二处被捕获